model ModelName
  options noimplicit
  uses "mmxprs"
  ! uses "mminsight" ! uncomment this line for an Xpress Insight model

  declarations
    zone = 1..3
    anni = 1..4

    disp : array(zone,anni) of integer
    domanda : array(anni) of integer

    x : array(zone,anni) of mpvar  !x(i,j) = quantità di legname tagliato nel bosco i all'anno j
    k : array(anni) of mpvar  ! k(j) = qunatità totale di legname tagliata nell'anno j
    z : array(anni) of mpvar  !quantità in eccesso (o difetto in positivo) di legname tagliata nell'anno j
    costi:linctr
  end-declarations

  disp::[10,12,7,16,
         4,2,10,9,
         6,8,11,5]

  domanda :: [16,23,26,25]


  forall(i in zone,j in anni) do
    x(i,j) is_integer ! basta questo...le altre variabili diventano intere di conseguenza
  end-do

  ! identificare k
  forall(j in anni) do
	k(j) = sum(i in zone) x(i,j)
	k(j)  + if(j>1,sum(m in 2..j) (k(m-1) - domanda(m-1)),0) >= domanda(j)
end-do

  ! rispettare le  disponibilità dei vari boschi
  forall(i in zone,j in anni) do
    x(i,j)<=if(j=1,disp(i,j),disp(i,j) +(disp(i,j-1)-x(i,j-1)))
  end-do

  ! definirla sempre positiva ("linearizzare il modulo")
  forall(j in anni) do
    z(j)>=k(j) - domanda(j)
    z(j)>=-(k(j)-domanda(j))
    end-do



costi := sum(j in anni) z(j)

minimise(costi)
writeln("sol:   ",getobjval)

end-model
