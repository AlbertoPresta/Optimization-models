model ModelName
  options noimplicit
  uses "mmxprs"
  ! uses "mminsight" ! uncomment this line for an Xpress Insight model

  declarations
    pr = 1..4
    mesi = 1..6
    rich : array(pr,mesi) of integer
    si : array(pr) of integer
    sf : array(pr) of integer
    cp : array(pr) of integer
    cs : array(pr) of real
    x: array(pr,mesi) of mpvar ! x(i,j) = numero di elementi tipo i prodotti nel mese j
    mag : array(pr,mesi) of mpvar ! mag(i,j) = numero di elementi immagazzinati del tipo i nel mese j
    soldi:linctr
  end-declarations

cp :: [20,25,10,15]
cs :: [0.4,0.5,0.3,0.3]
si :: [10,0,50,0]
sf :: [50,10,30,10]
rich :: [1500,3000,2000,4000,2000,2500,
        1300,800,800,1000,1100,900,
        2200,1500,2900,1800,1200,2100,
        1400,1600,1500,1000,1100,1200]


forall(i in pr,j in mesi) do
  x(i,j) is_integer
  mag(i,j) is_integer
  end-do

! imponiamo le condizioni iniziali sul magazzino
forall(i in pr) do
  
  mag(i,6) >= sf(i)
  end-do

! produrre abbastanza per soddisfare le richieste
forall(i in pr,j in mesi) do
  if(j=1) then 
    x(i,j) + si(i)>=rich(i,j)  + mag(i,j)
    end-if
  if(j>1) then 
    x(i,j) + mag(i,j-1)>=rich(i,j) + mag(i,j)
    end-if 
  end-do

! definire il contenuto del magazzino prima della vendita (cio√® prima di produrre le cose per il mese i)


soldi := sum(i in pr)(cp(i)*sum(j in mesi) x(i,j)  + cs(i)*sum(j in mesi) mag(i,j))

minimise(soldi)

writeln("sol:   ",getobjval)
forall(j in mesi) do 
   forall(i in pr) do 
    writeln("nel mese ",j," ho prodotto ",getsol(x(i,j))," elementi del tipo ",i," e ne ho immagazzinati dopo la prod. ",getsol(mag(i,j)))
    end-do 
  writeln("   ")
  end-do 

writeln("**************************PUNTO B***************************")

declarations
	y,z: array(mesi) of mpvar
	Cinc : integer
	Cdec: real
	costoVar : linctr
	
end-declarations


forall(j in mesi) do
	y(j) is_integer
	z(j) is_integer
end-do

forall(j in 2..6) do
	sum(i in pr) (x(i,j) - x(i,j-1)) = y(j) - z(j)
end-do
Cinc := 1
Cdec := 0.5
costoVar := sum(j in 2..6)(Cinc*y(j) + Cdec*z(j))

minimize(soldi+costoVar)
writeln("Soluzione2: ",getobjval)
forall(i in mesi) do 
    writeln("MESE ",i)
    writeln("posotivo:  ",getsol(y(i)))
    writeln("negativo:  ",getsol(z(i)))
    writeln("   ")
    end-do
end-model
