model ModelName
uses "mmxprs"; !gain access to the Xpress-Optimizer solver

declarations
  S = 1..10
  D = 1..6
  P = 1..3
  
  K: array(D) of integer
  a: array(S,D,P) of integer
  x: array(S,D,P) of mpvar
  svin: array(S) of linctr
  
end-declarations

K::[2, 2, 2, 2, 1, 1]

a(1,1,1) := 1
a(1,3,2) := 1
a(2,2,2) := 1
a(2,6,1) := 1
a(3,3,1) := 1
a(3,5,2) := 1
a(4,2,1) := 1
a(4,4,2) := 1
a(5,4,1) := 1
a(5,6,2) := 1
a(6,2,1) := 1
a(6,5,2) := 1
a(7,3,2) := 1
a(7,5,1) := 1
a(8,2,2) := 1
a(8,6,1) := 1
a(9,3,1) := 1
a(9,5,2) := 1
a(10,3,1) := 1
a(10,6,2) := 1


forall(s in S, d in D, p in P) do 
	x(s,d,p) is_binary
end-do

forall(d in D) do
	sum(s in S, p in P) x(s,d,p) <= K(d)
end-do

forall(s in S) do
	svin(s) := sum(d in D, p in P) a(s,d,p)*x(s,d,p) = 1
end-do

obj := sum(s in S, d in D) x(s,d,1)

maximize(obj)

if getprobstat = XPRS_INF then
	
	forall(s in S, d in D) do
    	if a(s,d,1) = 1 then
    	 	if ((d=1) or (d=3) or (d=5)) then
    	 		a(s,d+1,3) := 1
    	 	else
    	 		a(s,d-1,3) := 1
    	 	end-if
    	 end-if
	end-do
	
	forall(s in S) do
		sethidden(svin(s), true)
		sum(d in D, p in P) a(s,d,p)*x(s,d,p) = 1
	end-do
	
	maximize(obj)
	
end-if

end-model