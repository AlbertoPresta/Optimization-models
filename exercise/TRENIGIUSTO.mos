model TrainRevenue
uses "mmxprs"; !gain access to the Xpress-Optimizer solver

!sample declarations section
declarations
  CL = 1..2 !I e II classe

  c: array(CL) of integer   !costo d'utilizzo di una carrozza per classe
  cap: array(CL) of integer !posti disponibili per carrozza per classe
  y: array(CL) of mpvar     ! numero di carrozze per classe


  S = 1..5 !Stazioni 1=MI, 2=BO, 3=FI, 4=RM, 5=NA

  r: array(1..4,2..5,CL) of integer !ricavo per passeggero per tratta per classe
  d: array(1..4,2..5,CL) of integer !domanda di passeggeri per tratta per classe
  x: array(S,S,CL) of mpvar   !numero di passeggeri per tratta per classe

end-declarations

cap(1) := 52
cap(2) := 74

c(1) := 8950
c(2) := 7900

r::[72,  35, 90, 70, 145, 100, 150, 120,
	0,   0,   65, 30, 100,  55, 120, 80,
	0,   0,   0,  0, 70,  40, 95, 60,
	0,   0,   0,  0, 0,  0,  50, 20]

d::[143,  251, 150, 268, 107, 384, 62, 201,
	0,   0,   120, 189, 95,  537, 68, 400,
	0,   0,   0,  0, 78, 385, 69, 259,
	0,   0,   0,  0, 0,  0,  150, 462]

forall(k in CL) do
	y(k) is_integer
end-do

forall(i,j in S | j>i, k in CL) do
	x(i,j,k) is_integer
end-do

!composizione del convoglio
y(1) + y(2) <= 11

!numero di biglietti vendibili per segmento
forall(k in CL) do
	x(1,2,k) + x(1,3,k) + x(1,4,k) + x(1,5,k) <= cap(k)*y(k)
	x(2,3,k) + x(2,4,k) + x(2,5,k) + x(1,3,k) + x(1,4,k) + x(1,5,k) <= cap(k)*y(k)
	x(3,4,k) + x(3,5,k) + x(1,4,k) + x(1,5,k) + x(2,4,k) + x(2,5,k) <= cap(k)*y(k)
	x(4,5,k) + x(3,5,k) + x(2,5,k) + x(1,5,k) <= cap(k)*y(k)
end-do

!non si puï¿½ eccedere la domanda
forall(i,j in S | j>i, k in CL) do
	x(i,j,k) <= d(i,j,k)
end-do

profit := sum(i,j in S | j>i, k in CL) r(i,j,k)*x(i,j,k) - sum(k in CL) c(k)*y(k)

maximize(profit)

setparam("XPRS_CUTSTRATEGY",0)
setparam("XPRS_VERBOSE", true)
maximize(profit)

writeln("ris:   ",getobjval)

end-model